package generated;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /home/phillip/Code/libdatachannel-java/libdatachannel/include/rtc/rtc.h:216</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class rtcReliability extends Structure {
	public byte unordered;
	public byte unreliable;
	/** ignored if reliable */
	public int maxPacketLifeTime;
	/** ignored if reliable */
	public int maxRetransmits;
	public rtcReliability() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("unordered", "unreliable", "maxPacketLifeTime", "maxRetransmits");
	}
	/**
	 * @param maxPacketLifeTime ignored if reliable<br>
	 * @param maxRetransmits ignored if reliable
	 */
	public rtcReliability(byte unordered, byte unreliable, int maxPacketLifeTime, int maxRetransmits) {
		super();
		this.unordered = unordered;
		this.unreliable = unreliable;
		this.maxPacketLifeTime = maxPacketLifeTime;
		this.maxRetransmits = maxRetransmits;
	}
	public rtcReliability(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends rtcReliability implements Structure.ByReference {
		
	};
	public static class ByValue extends rtcReliability implements Structure.ByValue {
		
	};
}
